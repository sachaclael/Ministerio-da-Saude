from pysus.online_data.SIA import download
import pandas as pd
from datetime import datetime
import os
import re

# Configuração
UF = ['ac','al','ap','am','ba','ce','df','es','go','ma','mt','ms','mg','pa','pb','pr','pe','pi','rj','rn','rs','ro','rr','sc','sp','se','to']
ANO = [2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025]
MES = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]

# Procedimentos desejados
procedimentos_raw = '''0211060011|0211060020|0211060038|0211060054|0211060062
0211060070|0211060089|0211060097|0211060100|0211060119|0211060127|0211060135
0211060143|0211060151|0211060160|0211060178|0211060186|0211060208|0211060216
0211060224|0211060232|0211060240|0211060259|0211060267|0211060275|0211060283
0301010102|0303050012|0303050020|0303050039|0303050047|0303050055|0303050063
0303050071|0303050080|0303050098|0303050101|0303050110|0303050136|0303050144
0303050152|0303050160|0303050179|0303050187|0303050195|0303050209|0303050217
0303050225|0303050233|0405010010|0405010028|0405010036|0405010044|0405010052
0405010060|0405010079|0405010087|0405010109|0405010117|0405010125|0405010133
0405010141|0405010150|0405010168|0405010176|0405010184|0405010192|0405010206
0405020015|0405020023|0405030010|0405030029|0405030037|0405030045|0405030053
0405030070|0405030096|0405030100|0405030118|0405030126|0405030134|0405030142
0405030150|0405030169|0405030177|0405030185|0405030193|0405030207|0405030215
0405030223|0405030231|0405040016|0405040024|0405040040|0405040059|0405040067
0405040075|0405040083|0405040091|0405040105|0405040130|0405040148|0405040156
0405040164|0405040180|0405040199|0405040202|0405040210|0405050011|0405050020
0405050038|0405050046|0405050054|0405050062|0405050070|0405050089|0405050097
0405050100|0405050119|0405050127|0405050135|0405050143|0405050151|0405050160
0405050178|0405050186|0405050194|0405050208|0405050216|0405050224|0405050232
0405050240|0405050259|0405050267|0405050283|0405050291|0405050305|0405050313
0405050321|0405050356|0405050364|0405050372|0405050380|0405050399|0405050402'''
procedimentos = procedimentos_raw.replace("\n", "").split("|")

# Grupos do SIA a consultar
grupos = ["PA", "SP", "SC", "AD"]

# Dicionário para armazenar resultados de cada grupo
dados_por_grupo = {}

for grupo in grupos:
    try:
        df = download(UF, ano, mes, grupo)
        df["ano"] = int(ano)
        df["mes"] = int(mes)
        df["grupo"] = grupo

        # Identificar coluna de procedimento (varia entre grupos)
        col_proced = [c for c in df.columns if "PROC" in c.upper()][0]

        # Filtrar procedimentos de interesse
        df_filtrado = df[df[col_proced].isin(procedimentos)]

        dados_por_grupo[grupo] = df_filtrado
        print(f"{grupo}: {len(df_filtrado)} registros filtrados")

    except Exception as e:
        print(f"Erro no grupo {grupo}: {e}")

# Salvar em Excel com múltiplas abas
if dados_por_grupo:
    arquivo_excel = f"SIA_{UF}_{ano}_{mes}.xlsx"
    with pd.ExcelWriter(arquivo_excel, engine="openpyxl") as writer:
        for grupo, df in dados_por_grupo.items():
            df.to_excel(writer, sheet_name=grupo, index=False)

    print(f"Arquivo salvo: {arquivo_excel}")
else:
    print("Nenhum dado baixado.")
